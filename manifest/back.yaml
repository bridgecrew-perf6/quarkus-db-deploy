apiVersion: v1
kind: ConfigMap
metadata:
  name: quarkus-bad
data:
  bad.properties: |
    my.propr.1=toto
    my.propr.2=titi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: quarkus-configmap
data:
  application.properties: |
    smallrye.config.locations=./secret/security.properties
    quarkus.log.level=INFO
    quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/quarkus_test
    quarkus.hibernate-orm.database.generation=none
    quarkus.hibernate-orm.sql-load-script=no-file
---
apiVersion: v1
kind: Secret
metadata:
  name: quarkus-secret
type: Opaque
stringData:
  security.propertiex: |-
    quarkus.datasource.username=quarkus_user
    quarkus.datasource.password=quarkus_pwd
# data:
#   security.properties: cXVhcmt1cy5kYXRhc291cmNlLnVzZXJuYW1lPXF1YXJrdXNfdXNlcgpxdWFya3VzLmRhdGFzb3VyY2UucGFzc3dvcmQ9cXVhcmt1c19wd2Q=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quarkus
  name: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quarkus
  template:
    metadata:
      labels:
        app: quarkus
    spec:
      containers:
      - name: quarkus
        image: sokubedocker/quarkus-orm
        imagePullPolicy: IfNotPresent
        # env:
        #   - name: QUARKUS_DATASOURCE_USERNAME
        #     value: quarkus_test
        #   - name: QUARKUS_DATASOURCE_PASSWORD
        #     value: quarkus_test
        #   - name: QUARKUS_DATASOURCE_JDBC_URL
        #     value: jdbc:postgresql://postgres:5432/quarkus_test
        #   - name: QUARKUS_HIBERNATE-ORM_DATABASE_GENERATION
        #     value: none
        #   - name: QUARKUS_HIBERNATE-ORM_SQL-LOAD-SCRIPT
        #     value: no-file
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: "8Mi"
            cpu: "10m"
          requests:
            cpu: "10m"
            memory: "8Mi"
        volumeMounts:
        - name: config-volume
          mountPath: /work/config
        - name: secret-volume
          mountPath: /work/secret
          readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: quarkus-configmap
        - name: secret-volume
          secret:
            secretName: quarkus-secret
---
apiVersion: v1
kind: Service
metadata:
  name: quarkus
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: quarkus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
# apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: quarkus
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: quarkus
          servicePort: http