apiVersion: v1
kind: ConfigMap
metadata:
  name: quarkus-configmap
data:
  application.properties: |
    quarkus.log.level=INFO
    quarkus.datasource.username=quarkus_test
    quarkus.datasource.password=quarkus_test
    quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/quarkus_test
    #see https://quarkus.io/guides/hibernate-orm#hibernate-orm-in-development-mode
    quarkus.hibernate-orm.database.generation=none
    quarkus.hibernate-orm.sql-load-script=no-file
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quarkus
  name: quarkus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quarkus
  template:
    metadata:
      labels:
        app: quarkus
    spec:
      containers:
      - name: quarkus
        image: sokubedocker/quarkus-orm
        imagePullPolicy: IfNotPresent
        # env:
        #   - name: QUARKUS_DATASOURCE_USERNAME
        #     value: quarkus_test
        #   - name: QUARKUS_DATASOURCE_PASSWORD
        #     value: quarkus_test
        #   - name: QUARKUS_DATASOURCE_JDBC_URL
        #     value: jdbc:postgresql://postgres:5432/quarkus_test
        #   - name: QUARKUS_HIBERNATE-ORM_DATABASE_GENERATION
        #     value: none
        #   - name: QUARKUS_HIBERNATE-ORM_SQL-LOAD-SCRIPT
        #     value: no-file
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: "8Mi"
            cpu: "10m"
          requests:
            cpu: "10m"
            memory: "8Mi"
        volumeMounts:
        - name: config-volume
          mountPath: /work/config
      volumes:
        - name: config-volume
          configMap:
            name: quarkus-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: quarkus
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: quarkus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
# apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: quarkus
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: quarkus
          servicePort: http